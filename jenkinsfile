properties([parameters([choice(choices: ['Patch','Minor','Major'], description: 'Third stage meassage', name: 'ImageTag' )])])
pipeline{
  agent any
   environment {
    DOCKERHUB_CREDENTIALS=credentials('dockerhub')
    def new_version = ''
    def version = ''
    def application = 'backend'
  }
  stages{
        stage('Pull version'){
            steps{
              script{
		sh "curl -X GET -u '${NEXUS_USERNAME}':'${NEXUS_PASSWORD}' http://192.168.3.37:8081/repository/my-repo/VERSION -O"
		version = sh returnStdout: true, script: "cat VERSION | grep '${application}' | grep -Eo '[0-9]+(.[0-9]+)*'"		
		echo "$version"
 
		   if("${ImageTag}"=="Patch"){
                      echo "This is patch version"
		      def versions = version.split('\\.')
		      def last = versions[2]
		      last = last.toInteger() + 1;
		      new_version = versions[0] + '.' + versions[1]+'.'+"$last"
		     
		      
		      }else if("${ImageTag}"=="Minor"){
		      def versions = version.split('\\.')
		      def mid = versions[1]
		      mid = mid.toInteger() + 1;
		      new_version = versions[0] + '.' + "$mid"+'.'+0
		      echo "$new_version"
		     
		      
		      }else{
                      echo "This is major version"
		      def versions = version.split('\\.')
		      def first = versions[0]
		      first = first.toInteger() + 1;
		      new_version = "$first" + '.' + 0 +'.' + 0
		      echo "$new_version"
		    
		          
		      
                     }
                }    
  
           }
        }
	
	
	//stage('Build') {

			//steps {
				//script{
					
					//sh "docker build . -t nadeem90/test-imagetage:$new_version"

					 //}	
              	//}
			//}


			
			
	//stage('Docker Login, Docker Push') {

			//steps {
				//script{
				//docker.withRegistry('', 'dockerhub') {		
					//sh "docker push nadeem90/test-imagetage:'$new_version'"	
				     // }	
              	//}
			//}
		//}
		

         stage('Update Nexus') {
	   	steps{
            	     script {	
		     	def app_ver = "${application}"+'='+"${version}".trim()
			def new_app_ver = "${application}"+'='+"${new_version}".trim()
            		sh "sed -i 's/${app_ver}/${new_app_ver}/g' VERSION" 
    			//sh "curl -v -u '${NEXUS_USERNAME}':'${NEXUS_PASSWORD}' --upload-file VERSION http://192.168.3.37:8081/repository/my-repo/"
            			}
            		}
        	}    			
	
	
	
	
	
     }
  } 
