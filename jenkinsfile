@Library('ImageTag-Liabrary') _
properties([parameters([choice(choices: ['Patch','Minor','Major'], description: 'Third stage meassage', name: 'ImageVersion' )])])
pipeline{
  agent any
   environment {
    DOCKERHUB_CREDENTIALS=credentials('dockerhub')
    def new_version = ''
    def version = ''
    def application = 'backend'
  }
  stages{
        stage('Pull version'){
            steps{
              script{	
		 (version, new_version) = ImageTag("${ImageVersion}","${application}")	  
                }    
           }
        }
	
		
	stage('Build') {
		steps {
			script{
				sh "docker build . -t nadeem90/test-imagetage:$new_version"
					 }	
              			}
			}


	stage('Docker Login, Docker Push') {
		steps {
			script{
				docker.withRegistry('', 'dockerhub') {		
				sh "docker push nadeem90/test-imagetage:'$new_version'"	
				     }	
              			}
			}
		}
		

         stage('Update Nexus Version File') {
	   	steps{
            	     script {	
			UpdateNexusFile("${application}","${version}","${new_version}")
            			}
            		}
        	}    			
	
	
     }
  } 
