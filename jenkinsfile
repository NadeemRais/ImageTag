properties([parameters([choice(choices: ['Patch','Minor','Major'], description: 'Third stage meassage', name: 'ImageTag' )])])
pipeline{
  agent any
   environment {
    DOCKERHUB_CREDENTIALS=credentials('dockerhub')
  }
  stages{
        stage('Build'){
            steps{
              script{
       def version = readFile('VERSION')
                     echo "${version}"

                     if("${ImageTag}"=="Patch"){
                      echo "This is patch version"
		      def versions = version.split('\\.')
		      echo "$versions"
		      
		      def major = versions[0]
		      def minor = versions[0] + '.' + versions[1]
		      def patch = versions[2]+1
		      
		      echo "$patch"
		      
                     }else if("${ImageTag}"=="Minor"){

                      echo "This is minor version"
                     }else{

                      echo "This is major version"
                     }
                }    
  
           }
        }
     }
  } 
    
   //stage('Trigger ManifestUpdate') {
		//steps{
                //echo "triggering updatemanifestjob"
                //build job: 'updatepatch-file', parameters: [string(name: 'DOCKERTAG', value: env.flage)]
			//}
        //}
    
    
    
     //}  
//}
